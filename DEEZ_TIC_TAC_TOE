import tkinter as tk
from tkinter import messagebox

class TicTacToe:
    def __init__(self, root):
        self.root = root
        self.root.title("Tic Tac Toe")
        self.root.geometry("700x800")
        self.root.resizable(False, False)
        
        self.current_player = 'X'
        self.board = ['' for _ in range(9)]
        
        self.create_ui()
        
    def create_ui(self):
        # Title label
        self.label = tk.Label(self.root, text="Tic Tac Toe", font=("Helvetica", 20, "bold"))
        self.label.pack(pady=10)

        # Frame for buttons
        self.frame = tk.Frame(self.root)
        self.frame.pack()

        # Buttons for the game grid
        self.buttons = []
        for i in range(9):
            button = tk.Button(self.frame, text='', font=("Helvetica", 24), width=5, height=2,
                               command=lambda i=i: self.on_click(i))
            button.grid(row=i//3, column=i%3)
            self.buttons.append(button)

        # Restart button
        self.restart_button = tk.Button(self.root, text="Restart Game", font=("Helvetica", 14), command=self.restart)
        self.restart_button.pack(pady=20)

    def on_click(self, index):
        if self.board[index] == '':
            self.board[index] = self.current_player
            self.buttons[index].config(text=self.current_player, disabledforeground="blue")
            self.buttons[index].config(state="disabled")
            
            if self.check_winner():
                messagebox.showinfo("Game Over", f"Player {self.current_player} wins!")
                self.disable_all()
            elif '' not in self.board:
                messagebox.showinfo("Game Over", "It's a draw!")
                self.disable_all()
            else:
                self.current_player = 'O' if self.current_player == 'X' else 'X'
                self.label.config(text=f"Turn: Player {self.current_player}")

    def check_winner(self):
        win_combinations = [
            (0, 1, 2), (3, 4, 5), (6, 7, 8),  # rows
            (0, 3, 6), (1, 4, 7), (2, 5, 8),  # columns
            (0, 4, 8), (2, 4, 6)              # diagonals
        ]
        
        for combo in win_combinations:
            a, b, c = combo
            if self.board[a] == self.board[b] == self.board[c] != '':
                return True
        return False

    def disable_all(self):
        for button in self.buttons:
            button.config(state="disabled")

    def restart(self):
        self.current_player = 'X'
        self.board = ['' for _ in range(9)]
        self.label.config(text="Turn: Player X")
        for button in self.buttons:
            button.config(text='', state="normal")


if __name__ == "__main__":
    root = tk.Tk()
    game = TicTacToe(root)
    root.mainloop()
